// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Test = require("./Test.bs.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Core__Result = require("../src/Core__Result.bs.js");

var eq = Caml_obj.equal;

function forEachIfOkCallFunction() {
  var called = {
    contents: []
  };
  Core__Result.forEach({
        TAG: "Ok",
        _0: 3
      }, (function (i) {
          called.contents.push(i);
        }));
  Test.run([
        [
          "ResultTests.res",
          12,
          22,
          72
        ],
        "forEach: if ok, call function with ok value once"
      ], called.contents, eq, [3]);
}

forEachIfOkCallFunction();

function forEachIfErrorDoNotCallFunction() {
  var called = {
    contents: []
  };
  Core__Result.forEach({
        TAG: "Error",
        _0: 3
      }, (function (i) {
          called.contents.push(i);
        }));
  Test.run([
        [
          "ResultTests.res",
          19,
          22,
          63
        ],
        "forEach: if error, do not call function"
      ], called.contents, eq, []);
}

forEachIfErrorDoNotCallFunction();

Test.run([
      [
        "ResultTests.res",
        27,
        20,
        48
      ],
      "mapError: if ok, return it"
    ], Core__Result.mapError({
          TAG: "Ok",
          _0: 5
        }, (function (i) {
            return Math.imul(i, 3);
          })), eq, {
      TAG: "Ok",
      _0: 5
    });

Test.run([
      [
        "ResultTests.res",
        30,
        13,
        42
      ],
      "mapError: if error, apply f"
    ], Core__Result.mapError({
          TAG: "Error",
          _0: 5
        }, (function (i) {
            return Math.imul(i, 3);
          })), eq, {
      TAG: "Error",
      _0: 15
    });

exports.eq = eq;
exports.forEachIfOkCallFunction = forEachIfOkCallFunction;
exports.forEachIfErrorDoNotCallFunction = forEachIfErrorDoNotCallFunction;
/*  Not a pure module */
